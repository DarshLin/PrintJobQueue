/* Darsh Lin
   April 22, 2016
   CSPC 2430
   Version 1

   Version 1: The initial testing for this will be lifted right out from
   the lab3 main.cpp since that has all the testing needed, save for a
   few variations and maybe one or two more function tests, other than that,
   very similar.
   Version 2: In version 2, I will rewrite the entire main.cpp for this
   assignment to fit the needs for the printer queue after I know everything
   works.
*/




#include <iostream>
#include <string>
#include "Queue.h"

using namespace std;

void print(Queue q) {
  q.printQ(cout);
}

int main() {
  Queue q;
  cout << "Queue Created. Empty? " << boolalpha << q.empty() << endl;
  cout << "How many elements to add to the queue? ";
  int numItems;
  cin >> numItems;
  string j = "Hello ";
  string k = "My Name ";
  string l = " is awesome ";
  string m = " sir ";
  for(int i = 1; i <= numItems; i++){
	q.Enqueue(j,k,l,m);
  }
  cout << "Queue empty? " << q.empty() << endl;

  cout << "Contents of the queue q (via print): \n";
  print(q); cout << endl;
  cout << "Check that the queue wasn't modified by print: \n";
  q.printQ(cout); cout << endl;

  Queue t, u;
  t= u = q;
  cout << "Contents of queues t and u after t=u=q (via print): \n";
  cout << "u:\n"; print(u); cout << endl;
  cout << "u:\n"; print(t); cout << endl;

  cout << "Front value in t: " << t.Front() << endl;

  Queue copyt = t;
  cout << "Testing Copy Constructor. \n";
  cout << "t: "; print(t); cout <<endl;
  cout << "copyt: "; print(copyt); cout << endl;

  while(!t.empty()) {
	cout << "Dequeueing t: " << t.Front() << endl;
	t.Dequeue();
  }
  cout << "Queue t empty? " << t.empty() << endl;
  cout << "\nNow try to retrieve front value from t. " << endl;
  cout << "Front value in t: " << t.Front() << endl;
  cout << "\nTrying to dequque t: << endl";
  t.Dequeue();
  
  return 0;
}
